<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1018.0949                               -->
<workbook original-version='18.1' source-build='2021.3.3 (20213.21.1018.0949)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Covid_data' inline='true' name='federated.067qc611xxsk2m1a3h6r41moy384' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid_data' name='textscan.03j74c7144e7uu1c86qdw03yzwz4'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='D:\study\DATA SCIENCE\great learning\Data Analytics using tableau\projects\Covid-19_project\Covid_data.csv' dataRefreshTime='' directory='D:/study/DATA SCIENCE/great learning/Data Analytics using tableau/projects/Covid-19_project' filename='C:/Users/Harshit/AppData/Local/Temp/TableauTemp/1rgsxwt0rd2kck12xy2zn0v3482h/Covid_data.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.03j74c7144e7uu1c86qdw03yzwz4' name='Covid_data.csv' table='[D:\study\DATA SCIENCE\great learning\Data Analytics using tableau\projects\Covid-19_project\Covid_data#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:AN1978:no:A1:AN1978:1' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='datetime' name='date' ordinal='2' />
            <column datatype='string' name='iso_code' ordinal='3' />
            <column datatype='string' name='tests_units' ordinal='4' />
            <column datatype='real' name='aged_65_older' ordinal='5' />
            <column datatype='real' name='aged_70_older' ordinal='6' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='7' />
            <column datatype='real' name='Deathp100K' ordinal='8' />
            <column datatype='real' name='diabetes_prevalence' ordinal='9' />
            <column datatype='real' name='extreme_poverty' ordinal='10' />
            <column datatype='real' name='female_smokers' ordinal='11' />
            <column datatype='real' name='gdp_per_capita' ordinal='12' />
            <column datatype='real' name='handwashing_facilities' ordinal='13' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='14' />
            <column datatype='real' name='life_expectancy' ordinal='15' />
            <column datatype='real' name='male_smokers' ordinal='16' />
            <column datatype='real' name='median_age' ordinal='17' />
            <column datatype='real' name='Mortality Rate' ordinal='18' />
            <column datatype='integer' name='new_cases' ordinal='19' />
            <column datatype='real' name='new_cases_per_million' ordinal='20' />
            <column datatype='integer' name='new_deaths' ordinal='21' />
            <column datatype='real' name='new_deaths_per_million' ordinal='22' />
            <column datatype='integer' name='new_tests' ordinal='23' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='24' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='25' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='26' />
            <column datatype='integer' name='Number of Records' ordinal='27' />
            <column datatype='integer' name='population' ordinal='28' />
            <column datatype='real' name='population_density' ordinal='29' />
            <column datatype='real' name='positive_rate' ordinal='30' />
            <column datatype='real' name='stringency_index' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='integer' name='total_cases' ordinal='33' />
            <column datatype='real' name='total_cases_per_million' ordinal='34' />
            <column datatype='integer' name='total_deaths' ordinal='35' />
            <column datatype='real' name='total_deaths_per_million' ordinal='36' />
            <column datatype='integer' name='total_tests' ordinal='37' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='38' />
            <column datatype='integer' name='Waterfall' ordinal='39' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.03j74c7144e7uu1c86qdw03yzwz4' name='Covid_data.csv' table='[D:\study\DATA SCIENCE\great learning\Data Analytics using tableau\projects\Covid-19_project\Covid_data#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:AN1978:no:A1:AN1978:1' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='datetime' name='date' ordinal='2' />
            <column datatype='string' name='iso_code' ordinal='3' />
            <column datatype='string' name='tests_units' ordinal='4' />
            <column datatype='real' name='aged_65_older' ordinal='5' />
            <column datatype='real' name='aged_70_older' ordinal='6' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='7' />
            <column datatype='real' name='Deathp100K' ordinal='8' />
            <column datatype='real' name='diabetes_prevalence' ordinal='9' />
            <column datatype='real' name='extreme_poverty' ordinal='10' />
            <column datatype='real' name='female_smokers' ordinal='11' />
            <column datatype='real' name='gdp_per_capita' ordinal='12' />
            <column datatype='real' name='handwashing_facilities' ordinal='13' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='14' />
            <column datatype='real' name='life_expectancy' ordinal='15' />
            <column datatype='real' name='male_smokers' ordinal='16' />
            <column datatype='real' name='median_age' ordinal='17' />
            <column datatype='real' name='Mortality Rate' ordinal='18' />
            <column datatype='integer' name='new_cases' ordinal='19' />
            <column datatype='real' name='new_cases_per_million' ordinal='20' />
            <column datatype='integer' name='new_deaths' ordinal='21' />
            <column datatype='real' name='new_deaths_per_million' ordinal='22' />
            <column datatype='integer' name='new_tests' ordinal='23' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='24' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='25' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='26' />
            <column datatype='integer' name='Number of Records' ordinal='27' />
            <column datatype='integer' name='population' ordinal='28' />
            <column datatype='real' name='population_density' ordinal='29' />
            <column datatype='real' name='positive_rate' ordinal='30' />
            <column datatype='real' name='stringency_index' ordinal='31' />
            <column datatype='real' name='tests_per_case' ordinal='32' />
            <column datatype='integer' name='total_cases' ordinal='33' />
            <column datatype='real' name='total_cases_per_million' ordinal='34' />
            <column datatype='integer' name='total_deaths' ordinal='35' />
            <column datatype='real' name='total_deaths_per_million' ordinal='36' />
            <column datatype='integer' name='total_tests' ordinal='37' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='38' />
            <column datatype='integer' name='Waterfall' ordinal='39' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AN1978:no:A1:AN1978:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deathp100K</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Deathp100K]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>Deathp100K</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality Rate]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>Mortality Rate</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Waterfall</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Waterfall]</local-name>
            <parent-name>[Covid_data.csv]</parent-name>
            <remote-alias>Waterfall</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Covid_data.csv' datatype='table' name='[__tableau_internal_object_id__].[Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Covid_data.csv' id='Covid_data.csv_EE6EA854025F424EA11A156BAC65AE0A'>
            <properties context=''>
              <relation connection='textscan.03j74c7144e7uu1c86qdw03yzwz4' name='Covid_data.csv' table='[D:\study\DATA SCIENCE\great learning\Data Analytics using tableau\projects\Covid-19_project\Covid_data#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:AN1978:no:A1:AN1978:1' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='datetime' name='date' ordinal='2' />
                  <column datatype='string' name='iso_code' ordinal='3' />
                  <column datatype='string' name='tests_units' ordinal='4' />
                  <column datatype='real' name='aged_65_older' ordinal='5' />
                  <column datatype='real' name='aged_70_older' ordinal='6' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='7' />
                  <column datatype='real' name='Deathp100K' ordinal='8' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='9' />
                  <column datatype='real' name='extreme_poverty' ordinal='10' />
                  <column datatype='real' name='female_smokers' ordinal='11' />
                  <column datatype='real' name='gdp_per_capita' ordinal='12' />
                  <column datatype='real' name='handwashing_facilities' ordinal='13' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='14' />
                  <column datatype='real' name='life_expectancy' ordinal='15' />
                  <column datatype='real' name='male_smokers' ordinal='16' />
                  <column datatype='real' name='median_age' ordinal='17' />
                  <column datatype='real' name='Mortality Rate' ordinal='18' />
                  <column datatype='integer' name='new_cases' ordinal='19' />
                  <column datatype='real' name='new_cases_per_million' ordinal='20' />
                  <column datatype='integer' name='new_deaths' ordinal='21' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='22' />
                  <column datatype='integer' name='new_tests' ordinal='23' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='24' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='25' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='26' />
                  <column datatype='integer' name='Number of Records' ordinal='27' />
                  <column datatype='integer' name='population' ordinal='28' />
                  <column datatype='real' name='population_density' ordinal='29' />
                  <column datatype='real' name='positive_rate' ordinal='30' />
                  <column datatype='real' name='stringency_index' ordinal='31' />
                  <column datatype='real' name='tests_per_case' ordinal='32' />
                  <column datatype='integer' name='total_cases' ordinal='33' />
                  <column datatype='real' name='total_cases_per_million' ordinal='34' />
                  <column datatype='integer' name='total_deaths' ordinal='35' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='36' />
                  <column datatype='integer' name='total_tests' ordinal='37' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='38' />
                  <column datatype='integer' name='Waterfall' ordinal='39' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_DA080D2C8DDD4E21A7EA018772344B96]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Country wise deaths' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Avg mortality rate country wise'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid_data' name='federated.067qc611xxsk2m1a3h6r41moy384' />
          </datasources>
          <datasource-dependencies datasource='federated.067qc611xxsk2m1a3h6r41moy384'>
            <column datatype='real' name='[Mortality Rate]' role='measure' type='quantitative' />
            <column-instance column='[Mortality Rate]' derivation='Avg' name='[avg:Mortality Rate:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]' />
              <size column='[federated.067qc611xxsk2m1a3h6r41moy384].[avg:Mortality Rate:qk]' />
              <lod column='[federated.067qc611xxsk2m1a3h6r41moy384].[sum:total_deaths:qk]' />
              <text column='[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2A106421-E358-446F-AB89-63FA6EAE1799}' />
    </worksheet>
    <worksheet name='Country wise deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid_data' name='federated.067qc611xxsk2m1a3h6r41moy384' />
          </datasources>
          <datasource-dependencies datasource='federated.067qc611xxsk2m1a3h6r41moy384'>
            <column datatype='real' name='[Deathp100K]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Deathp100K]' derivation='Sum' name='[sum:Deathp100K:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.067qc611xxsk2m1a3h6r41moy384].[sum:Deathp100K:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.067qc611xxsk2m1a3h6r41moy384].[sum:population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]</rows>
        <cols>[federated.067qc611xxsk2m1a3h6r41moy384].[sum:Deathp100K:qk]</cols>
      </table>
      <simple-id uuid='{775A88D2-B888-44DE-936F-0A19FD3FC954}' />
    </worksheet>
    <worksheet name='Country wise total test'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid_data' name='federated.067qc611xxsk2m1a3h6r41moy384' />
          </datasources>
          <datasource-dependencies datasource='federated.067qc611xxsk2m1a3h6r41moy384'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.067qc611xxsk2m1a3h6r41moy384].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_DA080D2C8DDD4E21A7EA018772344B96]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.067qc611xxsk2m1a3h6r41moy384].[sum:total_tests:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.067qc611xxsk2m1a3h6r41moy384].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]</rows>
        <cols>[federated.067qc611xxsk2m1a3h6r41moy384].[sum:total_tests:qk]</cols>
      </table>
      <simple-id uuid='{AD6E10C9-20FB-4603-8D40-7A0E0C293D3D}' />
    </worksheet>
    <worksheet name='continent wise positivity rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid_data' name='federated.067qc611xxsk2m1a3h6r41moy384' />
          </datasources>
          <datasource-dependencies datasource='federated.067qc611xxsk2m1a3h6r41moy384'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
            <column-instance column='[positive_rate]' derivation='Sum' name='[sum:positive_rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.067qc611xxsk2m1a3h6r41moy384].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_DA080D2C8DDD4E21A7EA018772344B96]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.067qc611xxsk2m1a3h6r41moy384].[sum:positive_rate:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.067qc611xxsk2m1a3h6r41moy384].[none:continent:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.067qc611xxsk2m1a3h6r41moy384].[sum:positive_rate:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.067qc611xxsk2m1a3h6r41moy384].[Action (Location)]</column>
            <column>[federated.067qc611xxsk2m1a3h6r41moy384].[sum:positive_rate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.067qc611xxsk2m1a3h6r41moy384].[none:continent:nk]</rows>
        <cols>[federated.067qc611xxsk2m1a3h6r41moy384].[sum:positive_rate:qk]</cols>
      </table>
      <simple-id uuid='{8F46C717-497B-4547-AB46-67F4D6D6280F}' />
    </worksheet>
    <worksheet name='contry wise test per case'>
      <table>
        <view>
          <datasources>
            <datasource caption='Covid_data' name='federated.067qc611xxsk2m1a3h6r41moy384' />
          </datasources>
          <datasource-dependencies datasource='federated.067qc611xxsk2m1a3h6r41moy384'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[tests_per_case]' derivation='Sum' name='[sum:tests_per_case:qk]' pivot='key' type='quantitative' />
            <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.067qc611xxsk2m1a3h6r41moy384].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_DA080D2C8DDD4E21A7EA018772344B96]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.067qc611xxsk2m1a3h6r41moy384].[sum:tests_per_case:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.067qc611xxsk2m1a3h6r41moy384].[sum:tests_per_case:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.067qc611xxsk2m1a3h6r41moy384].[sum:tests_per_case:qk]</column>
            <column>[federated.067qc611xxsk2m1a3h6r41moy384].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]</rows>
        <cols>[federated.067qc611xxsk2m1a3h6r41moy384].[sum:tests_per_case:qk]</cols>
      </table>
      <simple-id uuid='{222BB8F6-2143-45BA-A318-219759F60CE5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='7' param='horz' type-v2='layout-flow' w='98590' x='705' y='1351'>
            <zone h='97298' id='5' type-v2='layout-basic' w='84481' x='705' y='1351'>
              <zone h='48649' id='3' name='Country wise deaths' w='42241' x='705' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48649' id='9' name='continent wise positivity rate' w='42240' x='42946' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48649' id='11' name='contry wise test per case' w='42241' x='705' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48649' id='12' name='Country wise total test' w='42240' x='42946' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97298' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='14109' x='85186' y='1351'>
              <zone h='10979' id='8' name='Country wise deaths' pane-specification-id='0' param='[federated.067qc611xxsk2m1a3h6r41moy384].[sum:population:qk]' type-v2='color' w='14109' x='85186' y='1351'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31419' id='10' name='continent wise positivity rate' pane-specification-id='0' param='[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]' type-v2='color' w='14109' x='85186' y='12330'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97298' id='17' param='vert' type-v2='layout-flow' w='98590' x='705' y='1351'>
                <zone fixed-size='280' h='48649' id='3' is-fixed='true' name='Country wise deaths' w='42241' x='705' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10979' id='8' name='Country wise deaths' pane-specification-id='0' param='[federated.067qc611xxsk2m1a3h6r41moy384].[sum:population:qk]' type-v2='color' w='14109' x='85186' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48649' id='9' is-fixed='true' name='continent wise positivity rate' w='42240' x='42946' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='31419' id='10' name='continent wise positivity rate' pane-specification-id='0' param='[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]' type-v2='color' w='14109' x='85186' y='12330'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48649' id='11' is-fixed='true' name='contry wise test per case' w='42241' x='705' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48649' id='12' is-fixed='true' name='Country wise total test' w='42240' x='42946' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{15C28DD3-7D2B-49FB-8C02-F412F75168A5}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Country wise deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.067qc611xxsk2m1a3h6r41moy384].[sum:population:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.067qc611xxsk2m1a3h6r41moy384].[sum:Deathp100K:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]</field>
                  <field>[federated.067qc611xxsk2m1a3h6r41moy384].[sum:Deathp100K:qk]</field>
                  <field>[federated.067qc611xxsk2m1a3h6r41moy384].[sum:population:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;United States&quot;</value>
                <value>3753.747322759999</value>
                <value>73151584987</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A59A9B76-9238-411B-910A-BE642DF22D27}' />
    </window>
    <window class='worksheet' name='continent wise positivity rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.067qc611xxsk2m1a3h6r41moy384].[none:continent:nk]</field>
            <field>[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2392960-4B7A-47AB-AD05-C07E2D89D650}' />
    </window>
    <window class='worksheet' name='contry wise test per case'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.067qc611xxsk2m1a3h6r41moy384].[:Measure Names]</field>
            <field>[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A35D4CC-DF8E-42C2-AAA7-7A18A2ACD9F2}' />
    </window>
    <window class='worksheet' name='Country wise total test'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{656236E1-263F-4190-A5F2-E89D0882D932}' />
    </window>
    <window class='worksheet' maximized='true' name='Avg mortality rate country wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9E56C25-95B1-49BC-9C99-AB07E5054734}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Country wise deaths' />
        <viewpoint name='Country wise total test' />
        <viewpoint name='continent wise positivity rate'>
          <highlight>
            <color-one-way>
              <field>[federated.067qc611xxsk2m1a3h6r41moy384].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='contry wise test per case' />
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{77A191F6-E0E0-4A68-B825-35071F0B242E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg mortality rate country wise' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Country wise deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country wise total test' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5xV9Z3//zy3t7l3eu99hhlAekcQUFRUVMCGUWyJSUxiyiabTb76202y
      SdbdrFlNjD1q7CI2EOkMMDDD0Kb33ue2ub2d3x8zyCAaR2ScYbjPP3gw93zOOe/zOef1qe/P
      +yOIoigSJMglimS8DQgSZDwJCiDIJU1QAEEuaYICCHJJExRAkEuaoACCXNIEBRDkkiYogCCX
      NEEBBLmkCQogyCVNUABBLmmCAghySRMUQJBLmqAAglzSBAUQ5JImKIAglzRBAQS5pAkKIMgl
      TVAAo8Tj8Yy3CQD4fD78fv94m4Eoirjd7vE2AwC32835ruwNCmCUTJSl04FAYELZMhH4OnbI
      LqAdkxqn28ef3i4dbzMQAwEQBARBGG9TCPj9SKTS8Tbja9kRFMAo8fkDHCxvG28zglxgLkgT
      yOdyUF9dgd039LfYX0VV/4W48hABn4+22lqcZ36hq+oAb736Cm+9v4vGfjsTozIOcrFxQQTg
      93ro6WjHdfortLbTMfj5aZ3WZkoO1OD0e2goP0Sb9cuvH/D7Geju5tNuqKWKohopi65aw+LC
      ZNxmI26njcoTRzH9k75q+9G9NNm/woMFmfSMbRPI2UVZRTeWvjbs0jBmzl9AuFxNWJQGY9UB
      du8/idTQSeaUecwrjKSxZD+VXXYS8uYxMycGr7mN4oNHGXAKyORhpJ2+rijiddtx+gRSUjKI
      ETxU7/uEfeXNhNS1kztzKTnKDvaW1OAW1RQuWox+oIo9h4/irusnIXMGV06LpLqshOouJwlT
      ZjEnM5ze+pMUl7ciCU1hyYKp6JXBFuJkZ2zfsLuPqnoTs+fPxDNQRWPTALqkflqbJMyel09h
      nh154mzSYvTYq0updetITQnHVFdETdjlmA4dJyR/JlkKPw21rWeua8jh8mkuij9+gyJ1CkuX
      zScuq5B8r4KYnOnEhmsRzQriktMRAhaqD9ew+PJsCjLb8WTOJy1CS3tdNV1OBWnJOloPH6Yj
      ZjblDQMkZ+WhUemQSca/kxlk7LkgAhCG/xGHm0AOuwMhZOj/0ZmFZKdEMaAz42k501JXakMJ
      C9WjjIohLMRDZVMb/U4ZvgEpUpUBtaOLtpipLMxKwud209cyQgCCnPjcWdyYcxl9jRVUVNcx
      Y2oGoQY9UdHRGBRO6k920NpjQQw4Mffp8WpnEmbQ4YmOJUrtpKSzha4uPxadArQakIWRE6Ph
      ZGMdMnko2tgoNPLxH+EIMrZcEAHIlDIkPie1DS1II30cOuEl9ybgn82TCOBy2LH19RAu0xMe
      G0KII43FBfH4XRYkchDaq6nrCcHgMTIwyJkmUH8DhwcUZEbrcLjd+HxyBCGAfdBEf78JZZiX
      tv4AMxcsRmZvYv+uPgB8vkF6u/qJilMSpjcQroxhXmESXrMRweeH6DRmRSfRefIU3TYvCTrl
      hcieIBMY6SOPPPLI172IIJUTHa6jtbyEstpe4mYsYGpcCIhePOiIClUSCPgRBA16vRS/qCYi
      Wo9CdFJZeoQBSTQ50/LwN5Ry+Hgl/R4lyak5pIQ7OLzvMG0WgfiUOGKiI5ADSCX0VB2l5Hg5
      Rn8oM+dOJ1wtR3D2c/ToCbyGLKbFu9m1pwSjEEpabCRRidFo5SKVRw7R7g1j7rQMrK2VFJdV
      0uvWkJkejbW5nOKjlThD05mVk4hSemaMwOHy8N7Buq+bVUEmGEIwOvTo6DcNcs8fPxxvM4Jc
      YILDHKNELpOwaGryeJsxNBMMCJLx92Lx+/1IJ8pMsEQ63Bn9agRrgFHidrtRKse/T+DxeJBI
      JMhk41t2iaKIy+VCrVaPqx0ATqcTlUp1Xu4h41+MBAkyjgQFEOSSJtgHGCV2p4cHHts63mZw
      ur06EabpRESECWDJ17EjKIBREhDBZHONtxlBLjAXpwA6S3h8cykyAUJisli6bBGJ4arzaM+J
      eJwOfIICjUo+BoYGmehcnALwOsi78h5WZsroqT3OyVOVRC6ageYrj8iJWHo6sSoiyYgPGwtL
      g0xwLk4BfIqALiwGTX8bLvsg9XWVpE6di8JUy9E+FfPTdZTu30lZo4mInHlcMzedxqM7OVTZ
      jS55GlctnYHT4yIgEXGZOzmwazu1vV6ic+awelEhGnlwjGCyc9EKoLX8IPu7JLgcDkJTLkMt
      +LBazPhEkHkcmAZFXGY3PW4VC5etICIyEsFtp9vsYeqC5STGRqFVCPTZB3GKXqQRauLSclBE
      2mmpraNzRhaZBs14P2aQMeaiLeJUWh2engbMqlQKsqJHPIgIw3N76sgELstLwdhaw74Dx3DJ
      dRROzcc30MLBgyX0WM50ao19zXQP+AkNDSdMBk4xuMbsUuCirQGi06ZyReY0msoOUlqhYGpy
      GKLbwqmjJfi7q+jXzsTjdGC02NGGhqH3+3G5XZiNFhRaPaFeF/7AmfAiATEAAT8ulwuH20tw
      fvzS4OIUQGQuBQEpICWlcA6qPiMylZb8wuk0dw2inbKANEMMcpWU0BAt3WYvGfkZROp1YDBg
      63cQn55FXFgIbmkWflkIeoUau6Meq1/FjGWJRGjH3+0hyNgT9AUaJUFv0MlJUACjZNDuYN/J
      jvE2A7/fjyAw5P04roh4vT7k8vGfP/F6vcjlMs5nfjwogFES9AY9m6A3aJAgk4CLsxM8DgQC
      Il0DXxDs6BvE6/UhCAIy2Xg3gcDlcqNS+cbbDNxuNwqFj/OJFhkUwCixu7x8+7FgJ3iyMcma
      QCI+j/fLwySKIj6fj0Ag2P251JlkAnBwfG8pX9pQ8TuprjxOj9mNpaeDrgHbN2FckAnIpG0C
      iaKIiDi8guR0OPEhNwlRDAzP9ApIZQrkMslQ+tMDYsLQ8oqJEII8yNgyaQVgKtvKO412pOYB
      RHU8q268Dt3ASXbsLmXA4cani+e6pHw6W+twajLQ+gfYv+sTmgZ8qGOncP2VczGoJm32BBlm
      0r5hAYG0GStZkqqn/ehWLHaw17eRfdUGpoQJlFdUnPXwMoUKgyEUpXWA3spqOpZMDwrgEmCS
      9QFGIiMsPBS5VIJSpQACeH0CGq0SQQzg9/kZ2QXu6mzApy/k5nVrWZgVTUAIdpAvBS6hIk5C
      RIKG3e+8yTGVCr9aS3T6maNatZr+shK2dWnx9jspGD9Dg3yDTDJXiABupxe5WgkeJz6ZGoUE
      /B4nfqkaGR7sg3Z8ooBMqUStVCL6vYiCDLkkgN1mwytKkUtlKLQqFCOirwWd4SYnk6wGkKBU
      D/vrKNQohn+VKtQMzZsqCAlVnH2K9LR/jxSdIbgu+FJjktUAY4fD6aLH7PzyhGOMzzfkCjER
      YnJOFAdBt9uDUqn48oSfQ1AAo2SivOygN+i5BL1BgwQ5TyZZH2Ds8Pr8FJU3jtn1p2bEEBWq
      HbPrB/l8ggIYJS6Pn8ffPjJm1//lxsVBAYwDYyoA0WOlsaEFm0fAEJ1IYmwosvNwr3GbenHp
      ojF87uo7Ebuxiy6bnPTkqKE2nejD2tNO04CHpJRUwnXn10EaL0TRx2BfB/Ut3cTnzSVWJ+K2
      9lBx/BRN/XYMiflcPif7rJdnbi/nyPFmJOEpzJlVgF4eoLuujKOVHXiByMyZzM9PYmjXpwC2
      3haOn6xiwCkQl30Zs3NiwTtIWdE+ujwhzFy4gDjdmTuIfjetVWWUN/VjSJ7CZXmpCF47jbXH
      qGw1EZY6hdn5ych9Vk4ePUqbGdKnziQ/MfQbzr2vxtj1AUQndSVHqOuxYLcZaaysYGC0sWU9
      NppbW7ANb3ptaThBi+ML0gZcNNRVc3zfYQZORzmx93CgrIpBhwvfWS7Pfrqrj1PdZTm/Z/qG
      MLWfYsuW7VQUvUtpN4Cf7qYaqmqbGTD2cmzLk2yvH7EjuKOeN175mKaeARqP7+K9nZW4fW7K
      ij6krK4Xs9mMzTkifcBNc00F9c1dGPtb2fHi05ww+mja+Xc2H22hq3Y3L7x8iJE+sub2w7z5
      1gG6+noofv8ddpxopr28iPe3Haavt5OiN19gb2Mfp3Z+xJ6yegZ6G/jwuTdp9n5DmXaejF0N
      4HPSahHJnlFAUpQeiehHkILPZaWzswe3qCA6IQG90ouxz0dodAgBlx2HBwKmesorOoi1ekmM
      jwNRxNrXTkOvA6U+hthow6c1idc2iF3UMC3fT22Tg8h0JX3N1RgDGtIjQlEJToxmH6KzH7cq
      Cn1kAiqtGkQ/1v5uekwOZPooksOV9PV0YXUGUIdGER+pRzpOewWHxhewbmM+3QefpRwAKYlT
      FrKhYBEeh4nGbQMcNHvg9ExHx0n6Ulby43WFYGzh/U/20mFOAnUEa+++j4LIzzyHoCJ3/lXk
      LRDwOQYoevVp+swt7CnT88Of3U644GHb07+nomcRc2OGznX1NKGcdg13XpdF+4FtlLhtdJmN
      JM68kuuXZdK950V29puxmmDZtRsoTNbRufcvfFQ6yH3zQ77B3PtqjJ0A5HqmZ0dw4MB2SiV6
      pi1YRE5MgJrD+6m1y1AJXpo6TMybr+fQbjNXbJiBo7uF6h6ROEUv/X39BKQ61LpwQv12Gior
      cGoEHPZ6Zl5xNYm6odvYHEYQwohMDqOzvAlXajamgV4sAzLaOjXoJd3sKzVjUPmJLZyFvakK
      R94UFNYBDpRUI1NqIAzi1HraWxowuwLY6nvQXD6bCM34NJ0kUjkqKSOW+AlIZR6OvP5XXjnc
      TVLOIjat1Z05Ie4ywmuf4d9+/iJKmQaXLoRMq4vagx/w1oFGUrNnc9PNa8iPDxne01lAJjOx
      5fd/pcjiI3vm1dweZudkQiKRMgmgIi5eT/uAE2KGwkOG5iwhuuhlfvUvRrTxs7nxlhSiHB72
      bHuLn2yzEx5fyB13x+K0irz65G94UZSj11mR5nbC/JxvNgO/AmPYB5ARmTGdVbHpWE09nCre
      j2phLlWDUVy9ehYKv5Oy4v30mM8dR07MmclUoYWUnBlEqKG3T0PBvGVcFiWjuewTztTmIsbG
      cozCNCwmDzZ7CyZnLjkFM2k1KFkxPQXMJ5CqY5i/PB+9CuqbALy0tfQRnzuXqRnRBAIiHks7
      1v4e6rvMmHtlpM+fNm4C+HyU5C3fwLfzOqgp2sOBpitYkzXcadalctcPfkCfyY7H1s/uA8Xo
      QsPZ+K9/xeoSMdYd4PUtO/jFvdej/jTgbyiLbv8WOaZOju4spcK8GNHpxgfIEPH7/GjUZ55/
      sKuawcg53HVtCm0lBylv6CDf34w/bj7fWZVAW9F2Sls93Lz8Rh4qWILdG2Dw2Cvs0E/s2fWx
      6wP4HHR09iIqQoiKSyJG68TqVaP2mDE5/fg8dmyOAAq5FNHvwe/3YertYnC4zeh0OPH6fAQC
      ARAkyJUKJAhIRs6A+k3U1lhx9FVxsqqWvgE7A2brOaYYYuIxqOUjSlQpGqUEi91OQAzg9njo
      6etAm7yETXfdxqLc2PNaYD1m+D10t7Vik4WTkVPArClyDh5uH5HAgyegISE5AU9PJYOybMLV
      3TQ3+YhOTCEjLQHR6zmz4MfjoKW5DSEslpz8aUyN7uBQm44U8zH2tdhwGis5cEpCcvSZ8tHS
      cBxndB7pGZlkxgo0d/bT09EMYWlkZGSSl+CnvNGIy+0lJDKWOK2T/cddLJwW+Y1m1VdlTEeB
      XD2VvPlRLU5RSfr0hSyOjiKmwMAnrz+LLaBl2pKVxOlDaVfs4e/PVBIREUVMmhyUGsJEI++/
      +ney5l1FnkKFYviDlMlViMOyDZg6kExZyY1zkpCKAYwNx6myO0AnQyUffjSJApXijM5lSiUK
      iZy47Cy69u3h6YOfoMmYx43TIjhR8jEvVRoIQ0PUOLX/AdpPbuYPv36Rels/Tvl2PljzbX48
      3c5zL22hosdBXNZCfvgvqbhr3ue/j8bz8G05FL34KH8/2EJM7hU8+MOlGGR2estf4MnHj+ON
      yGf9Pfcgt7fxt5cOceX1K+kr38nv3vqEPoeC7Lmr+d4NKRhSlvHb32zir45o7nj4l6RpRap2
      vkiZ/HKum30Tyr/+kW8900V49mLuvHcKqV4Zm1/7Xzb8pZe4nIU88L1EHE37+d2fX6DNGcVV
      dz7AjMiJPdcadIUYJWPtDfrLjYuZk5fwpek+dYWQuil67TVkS25jXsLo3BG6ag9wsE7k6isX
      oh7NeLTYz5Zn3iN/w11k6c/+kCeLK0RwImyUCAKolWOXXV99xElG9vIbiYhSjfqM0MQ8rojR
      ohr1ZIyauWvWEaOf2KX41yFYA4ySoDPc2UyWGmDySjtIkFEQFECQS5pgH2CUuDw+/vbBiQt+
      3RuX5pEQOXFnSic7QQGMEq8vwI6jF94devmM1KAAxpHJLQCnkQajn5S4KGQXQWNP9Lvpqill
      T1kTc66+g8xwCHjMHHz/dbaWNhNZcCV337yAEU4QuEwtbHvzVY60Cixaewtzwlt46on3MA0f
      l+dfye82rRz6w97L5tdf5EBlDwAybShr7nqYArGMp57fis2QzX3f3kiS7kxm2Xur2fL625xs
      t5EyezUbrllIqDjAnvfeZGtpB7nLb2bjlZehkIo0Fb/LK++VoEiaw52b1hI7/mMGX8rkFoDb
      Snufl6TYqPG2ZBSIdNeXsOuEkVhpN61WyAz3Ule8n3ZFFnfetZiWA6/xZmkhd881DJ/jZc9r
      z9IZdyV3Lo5EEaJFGzGV278djw+Rgcr97HaOcOdQhbJo9QYKl3jAb2Xv6x8hp4G/v1PN4g13
      Emqv5a3nP2Tjd9YQOfxluB1WYi67lrtXSTj50U52nYombaCUBl8GG++YRe3Hb/BBZi5X+Xfy
      110Wbr79LvTCp256E57JLYBP8dPX3gNKD3XVfaQVpGGsPkmr2U1YYi5T81LxWNvpaeqmrb8f
      WWQG86ZmovpGN8oWiMtZxB05UL39SToBkJG16BqyBQkCbmhIwKgcYZOrmvKefO66fyGRIzxE
      UjNDEX1OWsqlLJteeOaAVEFUXDJRiFgqP8I19VpmKYx8pIojPzeLkEAyTZX/Q2Pf1UTGDV0w
      PHUOV6SCy9pJjV6DSiPH3Q/h8UmkZ8QiyUigTnBzpKiZFetvZ3Zm+DeQVxeOi6BhcCHw0ddS
      TfGhkyij49EqZMjUemJjo7H0NtLdY8Pc20Btm5PUjBScne0YXZ4vv+yYIyCRCPjsfex9920q
      5DNYmT9i1Zi1i8aucn5z3y3cctf3+cfeGlz+oWkdp7mBjoFwMtLOdUYTvWYOlFtZOD0FSfQM
      VkZW8/071nPbpp+ys24A66D7TGKvme1PPcI99z1CR1Qhl6UmUjhjNr6yZ7nlru/zWmccCxK9
      9Li8HH7il2y4aR0P/+cLNFp8XAwTTJdIDQD4JWTNX0ZuVAhOUxPNjY2YPT6MZg/6xALiVKHk
      TkkmM1OLp88BEyQ0ojjYxo4dh5CnXc6aafGI3hHCVOlIyVjE/T96FLWpmv97Yw+decmkR0uo
      274Lw9J7iVScOzlkam/AFAhhflwoyAUW3vJjFt4CYsDOW//7ByLDNWcSy0NZ9cAjLLvDSNF7
      r7P7hIEkUymKed/mtfvDaP7weTafmkmSPJQV33uUX6SFU1P0PO9/UMmDt09l/LfQ++dcIjUA
      INehVw/p3WPrQRI3h6uvXkleUugEyQQRv8+Dw27H6fLgctpxelzUHijBFlPA3CwDHocdj09E
      DHhxe/yI+qlkKo5TVt+HzeZArlAik0nx9ZyiyDuFFRlDH7IoBnB7vAREEcQA7ZWlhBcsxqAU
      ABc9bV2YrSZqP3me46qlpIeB3+fB6wvQeryIU629OH0CatFOt9GG3WrBbnPhcLnxeAawDKqZ
      PUXJvrI6zIN2nA43GoNuguTrP2dy1wAKLdFhfiSCFENkOOrhfbU0UTmoj33I5vfVpGRnEqNX
      oZWF4fcrgLPTfpO0HdvCn//0Lt0AlHDgum9zs6KHHS+/w7siIFez4M5fcFNgM4/3Xc0jt+az
      cv1q/v6Xf+c1exS33vs9EsOltJd4mLM4D60AIOJqO8rvXj/FQw/dSaS8nx57IQsKDMMfqEB3
      2dv8+d2j6LNW8W8/X45eIrLz+d/Rk3cvywwePvq/R6jscZK+4CYeuO4yInwxvPvS3/jhK13k
      LtnAj5ZGEyK7meWbn+aXDz9H4twNfP/edMY/dNeXE/QFGiVj5Q362/uWMyUtetTpPe5uPnp5
      F5dtuJUU3Wg8OkXqT+2kyZrE8oXZSEfjLxNo5rUXKlhx+9VEKj8//WTxBQoKYJSYrTYef+fo
      Bb/ut1ZPIyVm9JETPJ6hPoBcoRjdttDDO+WIooAgEUZ9TkDkn6YPCuASI+gNejaTRQAXQz8l
      SJAxY3J3gi8gbq+PV3dVnff5t60sRDEBNrcOcjZBAYwSjzfA5v3V533++mVTggKYgEw6AYgB
      Hx01ZVS3mtDEZFCYn46zowVdWhqac1Nj7elmUKYhIcLwOVcbG7zmJj7cso36QQ2XX7uGWaln
      uw/01R/k3Q8OIU9bwNpr5mOQBbB117Ltg+002AysvPEaZiSfjrbgx1hXytsfF+EJzeeG65aT
      oFfi7K3krTe30ePRs/KW25gap/m0Q+t1DFC8fQuHG2xkz7+SlXOykZjqefvdD2jpdwEp3P7w
      ehL8A+x8bwsn2mxkzl/DtYuyJvzE1ldlkvUBRCyNhznY4CYxIxOD0ovL6aO7vh77yGReJyeO
      ldBpcmLtbKet3/zNmegxsXPrThyGLBYWhLH7H+/T4R9x3NfNey9vJ7RgNrLOPWzZW4/L1sfm
      19/CHpXPgmlZqEdEuXD3NrJlVwkJBfPI07byykfH8Ae6ee/pD1Hnz2f+9Bh2/f0Z6kdEi2k5
      vJmDfRHMmzuF1n3bONzQw0BDHd2ycJYvX87y5ZcRKrNT/NEujKpUFi6cjqnoRQ52fGO59I0x
      uWoAcZCKCidLr15BzIiiqs09SP3JEmoGAyRk5pMSqSQ2Nh6NWs6nUUIDXgbaG6hu6UcdnUpB
      ZgIK6RiERnHb6ffImLpkPoWxSiIGfs++Oh+35g6/isY9tObfzv9bkYU1M5xtB0/S2h2OXT6L
      29esQOkbGgU6jcPiIBASybx58zBIs+n7w5s0OaLpkYdyw6zZxMvMGFvacfvOmOCwm0nKvZa5
      c0MQuo34JW5Mg5BXMIe5s/NOZybzb9zAAkGC4Lcha604K1boZGFy1QBuMz2yUKI+U087Hf1Y
      HAJqiYeGujqcbjdNDTUYHWeKXvtAN3UdfWh0GuyNFdSP1XZImkimJ0h55lf3su62+3lu90k6
      us8Uz16rhcjEOCSASq3EL3Fg7+ug8uQufrJxPff8+D852Gj8NH1IQiyxjlp+9K0N3P6d33Ko
      5hS9vmRuWJ7Akz++jZvuf4RA9ioyRkw1pM26Cvuu33HnHfewyxJKTmwUdks5z/3ih6y77T7+
      681DuH0MO+L1sPXtzfTFXs7cuLHJkvFkctUASh3hgRasfggd0d8MCUsje94sQi39lDe24f+c
      mY+BnmpOHKpCEjI0rl2QE4CIMbBRqqJgxUYeX7ER8HLs+f9HQ+KZPoBco8XaZUJEh9cbQCHV
      ogqRkjv3Rr61cRbOqq08+n4RS358IwAyTQzX3PtrrrkX8Lbx9CMfEi9r4eOiTjb94RVSpV28
      +swbVGb8gJnD1WJ9yW70yx/mhZ+Hsucfr1HSkMG1N/+MN2/+KT5nP9v+9N980DyNNaFdbNtx
      gPBZ17IgM3ySlZZDTK5nEgxkxQyy90gDTp8fs7EHq310bs1KVRgxU2Zzx92buOu260kPH6tJ
      Lz9WkxG7y4OpZg9vNMQzP3nE4ZTLkB7eTJ3ZSe2J3fQG4oiJzUVhO0mXxQsIaNQjbPO5GTCa
      8XidlG/bTGdaPvFuE+0mAZUMJAoNfnc3g/YztZ21pwuPQoFEIkPpddJvslB+aAcn2q0IiPh8
      EmQyB6V7SomYfQ0LJ+nHD5NNAEiJm7GMdM9JXnnmaXaUtuCVSAmJiEABCDIFIfoQZFIphrBw
      VHIJSr2BUK2a6NQ8cnQmXn7maV7eUozN7//Su50fIpa6PfzywTv5wf+VcO2mW4hX+Gl46zf8
      dlcnaPPZcE0Uj3/vbl6ti2bddXMIi0jnqoXx/O1f7+Xh58u56ap5mKv38asnX8PhcVC57Rnu
      veNunq2O4t51c1GEz+C7N8Xy2EN3cOs9vyRk6feZn+rhpd/+nIPtbmbdcDfurY9yx+3fZp80
      h6tnTyE+WsuOP/+U9Zt+QdOU61kdI9LXeoz/efge1t5wA+vuvI8PK86Nu3qxE3SFGCVf1xnu
      1V/fhEb1BYOIzjbeeLWUxRvXEvcl44wejweJIFBf8hHt8uksn5XCaILKBdp28lxJLLevnYL6
      AvTtJ4srxOTqA4whUolAduL5L/eT/LOvVBnLtbddi2a0g+wCZMy6kgyJclQfP4AQu4Db16gu
      yMc/mQjWAKMk6Ax3NpOlBphkfYAgQb4aQQEEuaQJ9gFGicPl5VfP7xtVWo1SziN3Xz62BgW5
      IAQFMEr8AZGa1oFRpdWpL5awUEEmlABEv4vW8mL2lNRCaCarrlxIXMhnOp4eE4dOdTNzag6K
      rxi4ytp6jL6Qy8j4NFSOiBgQEYfj74wVYsDBruf/yPPbKkhedBc/+8HVnPZMaN31BA89/slQ
      OlFg6tofcn3IYf7jpYPD5waYdee/86ubpwFgrN3DH//nCRoGBEAkNutqfv7ofXiPvMAf//YJ
      8uzl/OThTaTqpcPenyKiZ5DSj17kf/9RhH7OzfzuwRsIdBzkT4+/QGMglXseepCl2SHU7XqD
      /3r2fYwYWPu9X3PL/GTGwh1qIjGhBNDbcJTjPRpu3LgJqWUA++cNCwbc9PSZhkJ8fEU8g/1Y
      zyqcA3TVVWJSxjIldazCJ3qpe/sJ9mmv4alX/xXMtrM6XsnLv8u7y7+LKIpU7NlMiyKOyxb8
      jHdvAgJOjmzZzGB+zKfpw7Mv5/dPLUcmk+Fp38nfdoYQa9nNH47F8JtnX8Jfv8MFSS4AAB9K
      SURBVJt33tzKLd+6lnAZIELF/nfY0ZPEX196Ga/TgcrVwT92V3PDv/wveYomHn/mPXJ/ejPe
      8Dn88bnb0AoDvPTbxyjN/ANzR79e/6JkQgnAOmAmc/pKdEoZQnQMGjGApb2CPUVHGZTHsGDp
      ItJHRIb1WjvYu3MvbTYF0xYvZ0aqlrqSozR0t9I1EGDKjEL6ak7g1Kaz7IoFBDx2Tuzdwim3
      g4xZS5idG4ugUqJTKHBbuzmyfzd1vV5i8+ZyxaxslKPeSuif4O1jT0sEmx6YilYmh8gv2DZU
      HKSusouc2677tNR1GbupdwlcHvs5Oy2KgxzaWs/0NXeicu3ALiqRyyWExGZgkH3CgNVPeLgU
      EZGe3h7mLL0ZrVKOoDTgHTDi8vuQy2TIwzKZr9/MSaOBVZcZEP1u+mpPYQmdSqzu3NtONiaU
      AOyDTgwaxYiFGyaOnWwgb9kNRLkb+PjQKZJXpg4ftHDk0EmiZ6xifqiL4k/20xS9AmNnH4lz
      r2axrJa3t5m4cs1aBhsP0tbtIF6iIGXafGbHeTlcfJT2CC0+Yz9OjYE4vYqY1FxC4j00VtfR
      lZ9Mqv4CjHG7Hbi8PTz1i3up7XKSPudaHvj27WQYRmZ9AGPpZnpy1nJ96JnfW+qKUcbMI0b/
      2dckYmk4RV14NrdHqkByFTcl/Ykf3P4UaOIISU1kqscHSEEEW0cdnxz8F57s7Ccm93J+9OON
      rJmdxP/8ahPtngiS5N3MXgmByDoevfHndOQt4M71NxA9+u3HLlomlAB0Bg1WixNRp0YAvF4n
      ElkUcdF6QsQkwg6Xn1nY4nYwqAplSlQoWo2MzLgD9JhBqokmKVaPRgwnPjaCGIMWf4gOtygi
      kckJDQ1Dp/eQGBmBb0SYQauxjdaWXmRqKW6TFeuF8gVSqgnRJHHdb35ISoiUw+//H0VlPWQs
      G7EjpLOT9w4HuPq++DMzu94uykrtzLor9Zx2uCiK1NTWkJSyCqVUAEHOnHU/Zc46cPTV8cab
      OzDohvtOAuiT8rhxzX1cnqmk4vXH2Fvv4N451/HYrOsgYOLtR/9CSiJIpFk8uvkNnIPdbHv9
      LUojH2Bx8uRWwYQSQGRCElVl+5A7spA5XCgSwpHRS2V5LQZvJ9awUD7dSkKtJzZgpby6ljid
      m+qeMGbMhn+2aEn0++nrbKLBbKWu18KMDB22vqFjLo8LZUg08TEyrI39F+6h5LEsn+Ljna17
      WZgeQlOnh4T8cBzGdsySKOINclpOVKAumE7S6W9N9NF+YCeB2avJCBn6+v0OI61WgYRwLaKj
      mcpmHatXxA0Lxkbl4XJskgANh7bjzruNWLWP3s5OtJGJJKdlsWP/VjTGBOraVWQsFGmvPUmn
      0UFf7QFOJs7hOk8rHx6oIkwfhlxw0mU0En0JTBNNqCcMjc9lfmECnY21tNl9GLThTLtsGr6+
      JtoGtSycnYtEpiMvKxmZQkfB3Bmo7Z3UNlvJWjCPOIWc+Mwkhsq+MDKGh3tCwpOIDpWjjkhF
      Zqqlrt1M7vR5xBpURMQlExupIyY2HZ1kgMYuGynTpxF7wYYypaQsX88CdSe79x5CM209S7ME
      iv/xDAe6XEAAf1gc83MzRwSh8mFTF7KiMHL4BQXoOPIJr+4vB0C0W0ldvoqYT5dGynEP1LBn
      VxHetGu444psAvYm3nzhHXqcAdIvW8b8dIGifYdRzF7F/IQwRGcfJfv30CDkcd+6Rch14WSG
      +Cneu50d+06Sv+ZB5iZP/uHcoC/QKPkq3qA6tYJXfnXjFycYrOLdIg9XXjkN9WiKIJ+do0eO
      EJI6m9RIxah8gexVW9njnc9VhaFjMpQ5WXyBggIYJVabnbf21Y4qrVIu4/aVhV+e8DwIOsOd
      S1AA3wBBb9CzmSwCmFB9gCBBvmkm1CjQREYEAoEvriwFgfMqgYKML0EBjBKbw8M9f9z8hcdv
      XVHALcsLvkGLglwIgk2gIJc0F5UARFHk47/9nndL6/EN9937arfzu8dfp9M4mkBWARymfkyj
      DJXy9QhgOvYq6zZs4pOawRG/i7j6q3n+dz9m3br1fP8/38FGAEvdbn686WbW3bqJl/Y04x1x
      hq3zOI/9/AHWr7uFn/7+JWr7HLhNzbz23z9hw7oN/OSxt+l1jAj9ho8dv7+TlTfcwA03rOXR
      l0pwAIg+ug+9xrc23MzHjSD6nJzc8SI/uudW1m/8OR9WTMLYh1/CRdcEioiMps5hxecTkckD
      9Df3YkhKQDLKsSyPfRA7GsK0YzvJ4zPW89Z+C1etysM3MhJXwEnJ1h2IMzfyys8K8TtdyP39
      vPlWCWv//UVmazt55s9v0jDrp+QOO6N1lX2EetWjvLIklCNvvUlVSwt4qxmMX8Pzf5/K3mef
      4nCbhTU5pyN5Gel1LeGZd+8lZeSzm1r45KSDZfMT8AXAbmxi72ETm377DPmhUtzCpRe9+qIT
      gCwkikSvmTanj0xvO83uZNLCh3zj7f1NFO8rom4gQOr0RVyepeJYbT8FhRl0lleiys4j0NaL
      KzMUz6CZgzt3U9XtIKbwclbnqzi8dx/VPQ4i0i5j1dLpGJTnlz1iwMOx4jLiZy9H2/YeZ9VN
      DhNNPiUp2gAVpyrQRyWSGuijI3I66xO0SMlkfqGU1h4vubohf3BD+lQCew9TFhJFkytAZlgU
      g+3HycqdglodyhULE3iiww05w/dwG2kJ+MkuO4ZFrSc9Ix2dIkDF0cMY8pcQ0VyDGbCZ6vDo
      MxG766g06UlKSfqcCNqTm4tOAAgqsnI1nGgwEynvICQ3FV9XCwRcVJ8opd2uJC4yQNXeI8yY
      vY4MQzcHiw4TmZxLeoiKZrcbj89NfVUt6qyl3H9dLB63n47KPUjTL+fea8OpL9pBRXc2C1L0
      52Wiu7+CSqOBa5ZnUt72mYN+H357N8UHdhFwOQj4ZazZeA2CQj68q6KARCrg9vhgOBi5Sh+D
      2lPEzm3HkBqyKVBJ8SAilckQEJDJpThGbuwthjI1ycOH778Pgof4/HWsX+ShrCuSG27LpK5l
      OJ3TSldrN9s/Oobd6SZk5loevn7meT3zxcrFJwBAEZtLyIliSrRhTC9UUdkF+P14JSoyC3JJ
      jlQxfbqUEFGCNEJJ31ETUamqES4BAdzICNdrkQhSFAoBnz+AJlyHVKIg3CClw33+84PVO1/k
      6Wdq2PzWU/R31OPPCTD1mR+RoJKDWoshKpMZs6+kMFVH8/uP8UGbiLK9iXbXYuKkTppbBkmY
      d8YLs3rXNiJXPsS3crRUbH2D0poGpstk9HZ24svTUFfTS0r6mbLbLzGw6NZ7Wa1R4rF08OKT
      L7DTaOOlN8t5/50nMbVV4pkTxxPfKaQgL5EbNy5B0VvMr99oBYICmPhIQ4nVmShyxqI9HSdT
      riIhUs/h2iqcA1ok6FFGSGit9XD11UtoOHWK1sjhlytRkBYbSvHJAzTXqFDF5JAXHUfjib18
      UifHZpMxa8X5z/pOv/VPFN0KiAH2vPnfOAvuJ8ZnYl9JOzOmFjI/08Ab77/AHgRcNiXXfLcQ
      vXiUJ/7wX0TI7Ujir2FllEB7xT769DOIzc5k6+anaNLIsVm8TFszn6xIBYdef4M/nVBgdERz
      z4oQLM2lVLgSmK7r473tRRgH3XhdFrQZN3DVhunceP+QfcUv/wsD837I1HgjXcee4+n/Ow4e
      B+nT1ny993IRclG5QoiiiN1sRhkWhn9wgEGvkohQFVarHY1Whww3vd09WF1+lNowYsNVOL2g
      16lxW0x4VCHIXQ4CGi06GRh7uui3eVCHxZAYpsTU282AzYs2LJqYcB3SEeuEv8wZ7nPnAUQR
      c187AW0c3pZi3j1q5NYN16KXeuloqKapx05Ycjb5KZHgc1Bzoox+j478ywoJV9h457GniPvW
      D5gTFqC1ppx2oxtNZCI56fHoFAL9bXXUtFmISsslI1ZB0auvYZuykmumx2Nsa6CqpRtUkRRO
      y0evOPMs1p5GvPp0IlQBnOZuqmubcCnCyc3JJGyU4ekmiyvERSWA8eS8BDCCnuajWOVTyEoY
      5QKTwRqKmiNYVHj2csgv8gUSHSYqmrtIysjD8AWbW19IggK4xLA7nJxq/uKwKIlRehKjzq/T
      /FUIOsOdSzA47jeATCphXn7ieJsR5AJzUc0EBwlyoQkKYJT4/QHKG3spb+odb1OCXECCAhgl
      DrePXz6zi397etd4mxLkAjIJ+wAibrsZo8mOHwG5xkBUmBbJGPnqiwEflv5urD4lsTFRKEa4
      04iiyEB7DR1GNyAnIiGZ+AgNXruFvn4Tuth0Qj8zKBRwW2hsaMMtM5CWFo9GLsXnHqStqRmH
      oCM+KYGQz3FjsvY0M+DTkxQXjlR00dvWSq9dIDY5iagQFaLPQVtTM2ZXgLDYVBKidMHSj0kp
      AD8tdaWcPGVGoZdhdwSYdeV1ZIWPxR7nXlrKdrH3SAVtgQjuuvNbJI4cCBJFPnzylxyhgEhF
      CLNW34hOAns/2El38zHC1z3JurwR6f02St97lS3HO8HtIP2G73LPoiSqtr/Ay4e6kQs+kmZv
      5I5rc89+cd4uXv7N76mOn8Ovf3QnnordvLilCJvHjy95Kf/xncVUfPwR249XYfd6kani2fCd
      B8k2jEGWXGRMQgEAmihmL5lDcpIOR8NedrVYyTTosdlseAMSNDodKqmI0ysi8TtxBRRoFCAK
      chRyAbfTg1SpQCb5sjJSSmTaNK6OTuFgef3nHLcgN1zBL376IInDNYPXbWPuyuvx13g4+JnU
      3t469pvC+MG/3oPBW85fHy+md7aH3ScMfO/fvkOEs53XX36bzsEcsoYjLIoBFxUfb0M6bw2X
      +XrAM8iRmk4Wrn+IBZkS3v3Dc5xwXEHq9MU8sHwtIQo/pW/9mRYzQQEwWQVwGtHPoNWFQhWg
      p7GS45V1WD0CYcnTWVYgYc+BVhSuPhzR08hUteHRTmdalpyyvWUkzp9DkuHLxrgl6CJi0ck8
      fF4LS6SLU6XHaX/iCZIyprJ86XxidDpi43T0NZx7gmvQS0xKPAaVHKV2GrmGbXT3JOFNm0KS
      RoYoiyQ+TonR6oWwoRrN2l7JEWssV81MZt/hHkSfB7laRUxMFDKlhHmFPvZ1KJiVFYffbeHk
      oWLapDNZmnDO7S9JJqcArO1s3bsPUasiJDaLK5cGOLr1EFV9PpRSL20dUqYXTMPt8DNl4VXE
      R2ipO/lZt82vjyAkseG7t2AUA/TUHee97VLuuH4B6i9yuxcgEAgAIogBRFGOTC5B9PsRzyRB
      +mnN5OfUgT1EZ69D4uvF6XLi8gylHZrfFPH7ZSjkQ4tfDn/0Fh2Gmay4poCwyfnmvzKTMxv0
      iay+eTEpKcN1vLMPWUQGa1ctJCVCiWvQgYR+tDEpJEfpQBQRRBF/IIDXacdic3BBCkhTP5KM
      GSxJ1NMX5ued8j48fr5QAJowLf215XTOm0OU7SBl9kzmRSYQ0vweFQNTSXI1UNMcYM3q06+t
      ixP7Kzm89Ze8bLfQ3tNHX/h0pnvsNDa3ka6CrWUCS9e4qPjgNYy5N3JTXliw8zuCySmAz6IK
      pSBRwUfvvIwHGTEp01m56Oww5WE6LSW7Xue4xoDHqSHvCy51NoMUPfsEf9myl6YBC6FJm1n/
      0KNcJdvH9sAVbMxys+u5R/h9VTuq2Omsv+sunG07+I+f/YWq/kb6lDv5YPXdPLU+gb8VW3ho
      7TyuKSjlPx/chFUdx60//Bmh8ihWLNXzXz/aiEUSz9r7HyZG5WPHG38ldun9fPfJZ/guYGmp
      5r29h1i9Zh6SFj9/ffL/47k+CdOuvovsQC9/3rqDnS+8x/NSCcqIJO79yX+wPPsSiH/+JUxC
      XyCR00800jdEFEXEMwc+jcM5lGbonDNZIZwT5uS0M5wAvPvbW87cKyCetVmH4O/j3b98yJT7
      N5GtAlEMDNkjCMNDseJnwqsEqNrzIU2aPNbMz0EUxeFm0NCuNYIgDNkeCCAi4Pf7EE2HePYd
      gY0PLCZk2GNVHHoAECTDzxMY/lOCBAictuO0nRLJ1xoaDvoCTViEz+2QCoLwTzLo3A9+1PeS
      CJzVovHJKVy7lqzhHamFc9bZCkhH/iRCzJQZJOjiP7VTKj37HEEQEIZ/8/tBEGO48tbsTz/+
      02nOPLhwzn0ll+B639EwCWuAscHlcuHxD31geu34hUgMeoOeS7AG+AYQBGFcP/wgY0NwQCDI
      JU1QAEEuaYICCHJJc9H3AQIeO/WVx+kweRBkKuIy8smJ/xpOLn4XLV0mYmOiUcpHMXLi7GTb
      1mJSFlxNXuxQGJL9O3ZTZ5Izc/kKZqefWdPrNTez7aM9dHr1LL1yFbmxOjwD1bz+2k6sQEhs
      OquuXD1ie9IAtu46duzYT68/huWrF+Gs2snuE52fjhQVrrqDJVl+dr24mSqbC6lKx4LV65ka
      P/6d04uBi74G8Dsd9Bot6CNjiNJD5f6jfPHK3S/G3ttI8ckafB47VTWNuNxfvkukKHqp2fkB
      uw5+zKFmB6LbysfvvE6FRUV6YiQSRgywefr5eMvHmOSRpIU52fLyNvoC4GzcS5kjluzsbNKT
      41GNKJK85g7eeP1tTMpoUqP0+AUBfWQi2dnZZGenIzRV0OYRwVLN9ko32dnZZGWkE/qFvhZB
      PstFXwOAgDYslozcPNSeASwdpwjgw9hlQqLy0NbuJC0zloGWenqsXnRRSWQmRWDtaqS504wf
      AX1CFhmhEaQlBJBIAqO+s6XlOHuMsaxdmEUVMGhuo9cWwYb71hHz2eAPdhOdooGVK1aSqpcS
      6/oDB5v8TO0cYP4ND7Ay69zrd3dUIurncctNy9EMF1UewwwSciT4jdXUd1/D2qwQ/I3thC1e
      zcqVaeedi5cqk0AAfjoqijh4uBRtSARZM+YRgYdjp47S5fOgj84jxevF7nQhkQi01dUTGqpF
      KUiQSqCtsQa7OpE4n4Wqfg/hBaNd+B6gqrSErFnrCW1pAMAT6KH12El+99CdmBUZ3PHgt1mR
      HzOUPCSOaQYzf/jxPVi8OlIinSQnDhLVUsUTz65jS0QsNzzwM26Yl8TplQseWwdVZbU8vPtZ
      xMR5fO/7d5EToQRRpKGhgfjETJRyKTZjP9uf+imlr2qZsexOHtx0BYaLvm7/ZpgEApASn7+Q
      hfnTULl7Kd1XQWfGQnD7yVt2NelaKU5zG52N9TT0WrD0CRim5DMvPgW/34OguYL8vDgcrZav
      dNfBipd59qCP69WH2X+0isqo4yyMkhJfsJTvPrAKRV8J//78NhY++i3UADItc66/jxnXbkIU
      /ZT+/d/pjzUw77vP8cm3RXyuPl57+q8Uhf6UZblDq2okch05829iw9opOMq38F9bivntpqWI
      fjPlx1uYdssaJALo5z3AtrfvJeBzULL9GV56N5Hv3JhDsCH05UyKcmLIfUCGUhOCVrQx6AFU
      YYTrZAiCgNnagzphIXfddRsLp8Qjl/gZ6Gym3awiLz8eheSrzyB65aksyFfR1dFBz4AZ04AR
      mTwJjaaD7kE/SpUSnUIxohfgZ9AyiF8UsDXsY2t7CjMTjRzZXorRK6BUqpFJgRG7BYdGZYGt
      DptXglKlQi0fqhtsFR9hSruBjDAJAh4aSoup67EjU6pQK6RD3tRfM08vFS76GkCQCZgaj/LS
      oWKkMhVJUxexSiuhMTTk04eLCI2nomQ7L9VpiTdEE46XmrIijrY6KT4gED9zNSuS1eh1cgSJ
      jFBDyFlhET+P8OwlbMpeAkBrsYGTIatIT9KgXpTN337zIHXeFG77zgPIuk7ymzdOcP8DNzN4
      6kP+8MwWHIZpPPCjB4hXGCDOxGMP3UmDXcOND/yMuVk6it54jPakDaybk8fS3Gp+98O7sUfO
      5rvfWwaihUOlGlbfkzT8fHISUsN59s//yv+rNJK97HZ+cG/mxf9ivyGCvkCj5Ly2SRVFmk7t
      omIgiquWFiIbTU0T6ODNZ4tYcPt6EjTnpg/6Ap1LMDTiN8D5CsDtcSCKSpQqGaN6PaIb6yCE
      6JWfmz4ogHMJOsNNVAQBpVL7Fc9Roh/7EKNBhgnWAKPE5XJNiH2AhxbLgORLI1aMPX6//5y1
      C+Nlh0QiCdYAY4kgCF+9CTQG+HxDu0FOhCaQx+OZEHnidrtRKBTnJYDxL0aCBBlHggIIckkT
      bAKNkvFucpxmIrT9TzNR8uTr2BHsBAe5pJk4xUmQIONAUABBLmmkjzzyyCPjbcTFRMDVy/7t
      OznR2E9EYgIamYTGo7tptKmJDtchEcDn7GTPnhOoIqIJUY2mfRrA2d/A7l37Ka9pRxkdT5ha
      htPURvHePVS1WQmLi0cjFTF1VHNg/0FarQIRUREofYOcKDnAgCyG6BA5IDLYWcfB4nrCMhIZ
      5Z6U59B6Yh9VRgkxEQakAQfVJfs4cLyegDaSKL0K0WuhZPd2Sqs7CIlNQq+UYGospbjRRmx0
      OHKJgN/r5PjePZhUEUSFfHVL7APNFO/fz8mGblShsYSqBQZaK9hfdJguu4yoyDDkgoeOqlL2
      Fp/EKuiICdMhGexkb/EJ5BHJ6JUCEKC3upjSBg/RieGMDJQfrAG+CgEbJ/YUI02bypQYF3uL
      qnGLYG5qpbG3iUH3UGDbwfoyjncOYLG4R3fdwW4OV/aQWjCTmfnhVOwtwyI6qSguQZo8leQQ
      G6VHqrG5zBwvqyEqZzoqSz2najsJeGxY7H2Un2rDK4IYcNPc1kjryXqs5/WQIl5LHUdKu+kd
      6MIn+umsOEqjN5zpuVHUHjhCn89Dw6G9WCKmMC1dRcnuo1j9Q0s+Kxt7MduGntszWM+xY530
      Wc/DEr+Z4j1HUCVPZfqUTHQKEfdgL8dOtZKYV4DQW01FSy+m9lqOt7spLEinv/wYrYNusHfR
      YbHQ0NBDQATR08/x2i4GmppxfeY2E6Mbf7Fg7aFZmcr1ealIiMOydSe97ikoQ8LQCSIWm4Mw
      RYDqJoHcTMPofH8AdHEsWRyHRBDw2SXoGzuQuNrpEnK4Kj8NwRHK4LHjGAdceAzTKchMxqtz
      caDNjD8Qhjwyi8T2Rjoc2STgwOb2ExF+fuuiRbeFY0dbyV4wDZPFAn4HrVYp0/NziQ9XoTRu
      oaG9n4HBGFYsyUBJGs7e9+iyiEQoQ0jTQZvZTlyogoHqRgy5majOYwLd23ESS9wiluXFf1pK
      m7sqkEVOJTcjEbfCRlGvlQGlmeS0AlLSwgl3tFPa6yFdB/qYDGTWJqy+GGRdPQRi4whrcZxz
      n2AN8BUIeL2oQ05vLaRErXVhdwASFelRUlr77Xj72zBHpBHzOdsYfSGCgICIpaOGorIW0mdO
      QedyIQ01IAekUimCRMA9aEceakCKgFKlwOn2DsclVRKTrqev1YjD0Y1XlkiY+qu/WlEU6W1v
      IRCZTnLIcEPh/2/vXn7bpgMAjn+dJk5sx3Yat0nTNen6Wg+btAlBNTo2IYGEEEfOnDjwLyEO
      SFy4gnhIoDHBeGmso12BPtK1atPX0jVrm9Z24tiJOaxFO1RC6dW/z935OZG/0c/2z0m7jZSU
      ScbjgIRhKhzW6kiGzot7wDEUVcZ2PCBGfjTHwWaNwK9RrvdxNX+xf+Zxj1yOdh7w2Scf8+nn
      X1Gu2oStFgnDoAcJRZGx3RYQIisKEhK6oXJ03AAgqeikUiH2kc1u3aVoWeeOIwLoQiwep+k2
      Th828Wl5CqoCIGFeLhFUKqw+bVIqml1+sG0ONpdZ2G5y/bUphrIqkizTObEJgE67g4SErKkE
      JzZtQvxWgJKU//uBWzM7TOe4wt7aFsbECImLLFsKT5i9/ytPq1vMzM2zWl5mZc8hbPn47QAI
      cR0PM2sQOi7+i41otQI09TQH8zIlf4Pl1V1iw0XSFzzCEkmZ3JU3+ODDj3j/9jgbC/PYJAgc
      hw4hnuefjinhex4hIa7bxNRPV6fGFYbSSbaf12g4DTL92XPHEQF0Q+/DOnjC4r7D8dZjyo1+
      +s7O7eQcI6lNZp95ZLRMVy8b2lUer7tcu3EVPR7SbrcJlUFMZ5Fy1WZ/p8y+ncbMDhLu/8Xu
      UYO11XV64inOHjFIpdOEnT0WNlXGrAsuUJPiTE7dYbzQi2noqKqGpqbJJRz+2aji1rd4uCJR
      upSlGFZ4VKnj1Mos7qbpN86KkxkYSfJodp9ipsuVsC9RS6PEKsvUXJ8g6BBPJEhpORrVBfbq
      NitPdtDUFEZKpbK5hmPX+HPJppA9m9XHsC6ZVCsr1L1+LO38bwRxFagbsRTFks4fX3/JzG6C
      d969RUaO4TkOWr6AoUq4tsrYeI6g2UDVLXTt/6cAvn1A+e+H/P5ghrm5OVZ3HAZGJynlE8ze
      +4blQ4M7b93EUjRM+YRf7t6lnp5k+tVJFCmgEcTIWn0o7nP8gQnG+hUaxw30YgG1i7cnSQl6
      c3ny+TxZQyNp9DIyNEjfQD+Hiz9z9+E2E7ffZNIyyJUGWL73Bb8tOdx6720Kag+B5xBqeSxd
      wW/YlMbGibc9UHUsvZs9ARIZrOQB97//jvJhD69MT1MwDdLU+OmH+3h917h5fZTe3izx50t8
      ++M8mauvc2PYoqfdxIkZFHJZep6tk7wyRUELcU58rGKel2en4k6wEGliCiREmghAiDQRgBBp
      IgAh0kQAQqSJAIRIEwEIkSYCECJNBCBEmghAiDQRgBBpIgAh0kQAQqSJAIRIEwEIkSYCECJN
      BCBEmghAiDQRgBBpIgAh0v4FS3DH2XHljQoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      KTOKyAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='179' name='continent wise positivity rate' width='192'>
      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
      pbQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='contry wise test per case' width='192'>
      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
      I6HRBKCR0Pz/l2Hlcp1+qzwAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
